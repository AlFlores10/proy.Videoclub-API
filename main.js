//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////// IMPORTA EXPRESS Y CORS /////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const express = require('express'); // IMPORTA EXPRESS
const cors = require('cors'); // IMPORTA CORS

const app = express(); // USA EXPRESS
app.use(cors()); // USA CORS
app.use(express.json());

const routeMovies = require('./components/movie/router.js');
const Movie = require('./components/movie/model.js');

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////// IMPORTA MONGOOSE DB Y CREA LA CADENA DE CONEXION CON LA BBDD ////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const mongoose = require('mongoose'); // IMPORTA MONGOOSE

mongoose.connect('mongodb://localhost:27017/db-ejemplo', { // CREA CONEXION Y BASE DE DATOS CON MONGODB
useNewUrlParser: true,
useUnifiedTopology: true,
useCreateIndex: true,
useFindAndModify: false
})

.then(() => console.log('Mongoose funcionando'))  // SE EJECUTA SI LA PROMESA DEL METODO CONNECT SE RESUELVE BIEN
.catch(() => console.log('Mongoose NO funcionando')); // SE EJECUTA SI LA PROMESA DEL METODO CONNECT SE RESUELVE MAL


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////// MIDDLEWARES ///////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.use((req, res, next) => { // MIDDLEWARE VALIDACION
    console.log('Ejecutando middleware');
    next();
});

const middleware2 = (req, res, next)=> {  // CREA UN MIDDLEWARE COMO FUNCION PARA PODER REUTILIZARLA
    console.log('Ha pasado por aqui 2');
    next();
};


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// ARRAYS CARTELERA-PELICULAS, USUARIOS, PEDIDOS //////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const carteleraPeliculas = [
    { id: 1, titulo: 'Matrix'},
    { id: 2, titulo: 'American Gangster'},
    { id: 3, titulo: 'Los Juegos del Hambre'},
    { id: 4, titulo: 'Monstruos S.A.'},
];
let usuarios = [];
let pedidos = [];

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////// INICIANDO SERVIDOR NODE //////////////////////////////////////////////////// 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.listen(3000, ()=> { // INICIANDO SERVIDOR NODE
    console.log('Servidor levantado en puerto 3000 ');
});


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////// PETICIONES PAGINA DE INICIO ('/') //////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.get('/', middleware2, (req, res)=> { // PAGINA DE INICIO
    res.json('proy.Videoclub-API Version 1.0.0')
});


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// PETICIONES PAGINA DE USUARIO ///////////////////////////////////////////////// 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.get('/users', (req, res)=> { // PAGINA DE USUARIOS
    res.json(usuarios);
});


app.get('/users/profile/:nick', (req, res)=> { // PAGINA DE USUARIOS (BUSQUEDA POR NICK)
    const usuarioElegido = req.params.nick;
    usuarioElegido = usuarios.find(usuarioElegido => usuarioElegido.nick == nick);
    res.json(usuarioElegido);
});


app.delete('/users/profile/:nick', (req, res)=> { // PAGINA DE USUARIOS (BORRAR POR NICK)
    const nick = req.params.nick;
    let usuarioElegido = usuarios.find(usuarioElegido => usuarioElegido.nick == nick);
    res.json(usuarioElegido);
});

app.post('/users', (req, res)=> { // PAGINA DE USUARIOS NUEVOS
    let = { nick, contrasenya} = req.body;
    let nuevoUsuario = { nick, contrasenya};
    usuarios.push(nuevoUsuario);
    res.json(nuevoUsuario);
});


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// PETICIONES PAGINA DE PELICULAS //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.use('/films', routeMovies);   /// TODAS LAS PELICULAS ///

app.get('/films/:field1', routeMovies); //// BUSQUEDA POR TITULO ////

app.patch('/films/:field1', routeMovies); //// MODIFICA POR TITULO ////

app.post('/films', routeMovies); /// NUEVA PELICULA ///

app.delete('/films/:field1', async (req, res) => { // BORRAR PELICULA
    const borraPelicula = await Movie.findOne({field1: req.params.field1});
    res.json(`${borraPelicula} Ha sido borrada con exito`);

});


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////// PETICIONES PAGINA DE PEDIDOS //////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.get('/pedidos', (req, res)=> { // PAGINA DE PEDIDOS
    res.json(pedidos);  
});

