//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////// IMPORTA EXPRESS Y CORS /////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const express = require('express');                                // IMPORTA EXPRESS
const cors = require('cors');                                      // IMPORTA CORS
const app = express();                                             // USA EXPRESS
const PORT = process.env.PORT || 3000; 

// Importaciones
const auth = require ('./components/config/auth');
const login = require ('./components/config/config');

// Routes
const routeMovies = require('./components/movie/router.js');
const routeUsers = require('./components/users/router.js');
const routePedidos = require('./components/pedidos/router.js');

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////// IMPORTA MONGOOSE DB Y CREA LA CADENA DE CONEXION CON LA BBDD ////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const mongoose = require('mongoose'); // IMPORTA MONGOOSE
const MONGO_URI = process.env.MONGO_URI || 'mongodb://localhost/db-ejemplo';

mongoose.connect( MONGO_URI, { // CREA CONEXION Y BASE DE DATOS CON MONGODB
useNewUrlParser: true,
useUnifiedTopology: true,
useCreateIndex: true,
useFindAndModify: false
})

.then(() => console.log('Mongoose OK'))                 // SE EJECUTA SI LA PROMESA DEL METODO CONNECT SE RESUELVE BIEN
.catch(() => console.log('Mongoose OFF'));              // SE EJECUTA SI LA PROMESA DEL METODO CONNECT SE RESUELVE MAL


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////// MIDDLEWARES ///////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
app.use(cors());                                                                // INSTANCIA CORS
app.use(express.json());                                                        // INSTANCIA BODYPARSER

const middleware2 = (req, res, next)=> {                // CREA UN MIDDLEWARE COMO FUNCION PARA PODER REUTILIZARLA
    res.json({
        message: "proy.Videoclub-API Version 1.0.0"
    });
    console.log('proy.Videoclub-API Version 1.0.0');
    next();
};


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////// INICIANDO SERVIDOR NODE //////////////////////////////////////////////////// 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.listen(PORT, ()=> { // INICIANDO SERVIDOR NODE
    console.log('Servidor levantado en puerto '+ PORT);
});


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// PETICIONES PAGINA DE USUARIO ///////////////////////////////////////////////// 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.get     ('/', middleware2);                             /// PETICION PAGINA PRINCIPAL ///
app.post    ('/', routeUsers);                              /// NUEVO USUARIO ///
app.post    ('/login', login.loginUsers);                   /// LOGIN USUARIO ///
app.use     ('/users', auth.checkToken, routeUsers);        /// VERIFICA TOKEN USUARIO ///
                   
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// PETICIONES PAGINA DE PELICULAS //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.use     ('/films', auth.checkToken, routeMovies);       /// TODAS LAS PELICULAS ///

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////// PETICIONES PAGINA DE PEDIDOS //////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.use     ('/pedidos', auth.checkToken, routePedidos);    /// TODOS LOS PEDIDOS ///
app.post    ('/pedidos', routePedidos);                     /// CREAR PEDIDOS ///


