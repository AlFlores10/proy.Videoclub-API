//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////// IMPORTA EXPRESS Y CORS /////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const express = require('express'); // IMPORTA EXPRESS
const cors = require('cors'); // IMPORTA CORS

const app = express(); // USA EXPRESS
app.use(cors()); // INSTANCIA CORS
app.use(express.json()); // INSTANCIA BODYPARSER

const routeMovies = require('./components/movie/router.js');
const Movie = require('./components/movie/model.js');

const routeUsers = require('./components/users/router.js');
const User = require('./components/users/model.js');

const routePedidos = require('./components/pedidos/router.js');
const Pedido = require('./components/pedidos/model.js');

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////// IMPORTA MONGOOSE DB Y CREA LA CADENA DE CONEXION CON LA BBDD ////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const mongoose = require('mongoose'); // IMPORTA MONGOOSE

mongoose.connect('mongodb://localhost:27017/db-ejemplo', { // CREA CONEXION Y BASE DE DATOS CON MONGODB
useNewUrlParser: true,
useUnifiedTopology: true,
useCreateIndex: true,
useFindAndModify: false
})

.then(() => console.log('Mongoose funcionando'))  // SE EJECUTA SI LA PROMESA DEL METODO CONNECT SE RESUELVE BIEN
.catch(() => console.log('Mongoose NO funcionando')); // SE EJECUTA SI LA PROMESA DEL METODO CONNECT SE RESUELVE MAL


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////// MIDDLEWARES ///////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.use((req, res, next) => { // MIDDLEWARE VALIDACION
    console.log('Ejecutando middleware');
    next();
});

const middleware2 = (req, res, next)=> {  // CREA UN MIDDLEWARE COMO FUNCION PARA PODER REUTILIZARLA
    console.log('Ha pasado por aqui 2');
    next();
};

app.get('/', middleware2, (req, res)=> { // PAGINA DE INICIO
    res.json('proy.Videoclub-API Version 1.0.0')
});

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////// INICIANDO SERVIDOR NODE //////////////////////////////////////////////////// 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.listen(3000, ()=> { // INICIANDO SERVIDOR NODE
    console.log('Servidor levantado en puerto 3000 ');
});


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// PETICIONES PAGINA DE USUARIO ///////////////////////////////////////////////// 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.use('/users', routeUsers);   /// TODOS LOS USUARIOS ///

app.get('/users/:name', routeUsers); //// BUSQUEDA USUARIO POR NAME ////

app.patch('/users/:name', routeUsers); //// MODIFICA USUARIO POR NAME ////

app.post('/users', routeUsers); /// NUEVO USUARIO ///

app.delete('/users', routeUsers); /// ELIMINAR USUARIO ///


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// PETICIONES PAGINA DE PELICULAS //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.use('/films', routeMovies);   /// TODAS LAS PELICULAS ///

app.get('/films/:title', routeMovies); //// BUSQUEDA POR TITULO ////

app.patch('/films/:title', routeMovies); //// MODIFICA POR TITULO ////

app.post('/films', routeMovies); /// NUEVA PELICULA ///

app.delete('/films', routeMovies); /// ELIMINAR PELICULA ///

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////// PETICIONES PAGINA DE PEDIDOS //////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.use('/pedidos', routePedidos);   /// TODAS LOS PEDIDOS ///


